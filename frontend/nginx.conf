# user  root;

env API_URL;

worker_processes  1;
error_log /var/log/nginx_debug.log debug;
error_log  /var/log/nginx_error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx_access.log  main;
  sendfile        on;
  keepalive_timeout  65;
  server {
    listen       80;
    server_name  localhost;
    location / {
      root   /app;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }
    location ~ /share/([0-9a-z]+) {
      root /app;
      index index.html;
      try_files /index.html /index.html;
      set $og_title "Shared model";
      set $og_thumbnail "https://lens.ondsel.com/ondsel_logo.svg";
      access_by_lua_block {
        local http = require("resty.http")
        local cjson = require("cjson")
        local httpc = http.new()
        local id = ngx.var.request_uri
        local api = os.getenv("API_URL")

        local lastSlashIndex = string.find(id, "/[^/]*$")
        local shareModelId = string.sub(id, lastSlashIndex + 1)

        local res, err = httpc:request_uri(api .. "/shared-models/" .. shareModelId, {
            method = "GET"
        })
        if not res then
          ngx.log(ngx.ERR, "Failed to request API: ", err)
        elseif res.status ~= 200 then
          ngx.log(ngx.ERR, "API returned non-200 status code: ", res.status)
        else
            local data = cjson.decode(res.body)
            ngx.var.og_title = data.model.file.custFileName
            ngx.var.og_thumbnail = data.thumbnailUrl
        end
      }

      set $og_url $http_host$request_uri;
      add_header 'X-Frame-Options' 'SAMEORIGIN' always;
      sub_filter '</head>' '<meta property="og:title" content="$og_title" />\n<meta property="og:url" content="$og_url" />\n<meta property="og:image" content="$og_thumbnail" />\n<meta property="og:description" content="3D Mesh Model" />\n</head>';
      sub_filter_once off;
    }
   error_page   500 502 503 504  /50x.html;
   location = /50x.html {
     root   /usr/local/openresty/nginx/html;
   }
  }
}